AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: task manager application using java and spring boot

Globals:
  Function:
    Timeout: 30
    MemorySize: 256
    Architectures:
      - arm64

  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Resources:
  TaskMangerCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Origins:
          - DomainName: !GetAtt TaskMangerClientBucket.DomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOAI}
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          Compress: true
          TargetOriginId: S3Origin
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          MaxTTL: 3600
          DefaultTTL: 3600
          MinTTL: 0

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: OAI for TaskManager app

  TaskMangerClientBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-task-manager-client"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  TaskManagerClientBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TaskMangerClientBucket
      PolicyDocument:
        Statement:
          - Effect: "Allow"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${TaskMangerClientBucket}/*"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOAI}"

  TaskManagerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod

  TaskManagerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: TaskManager
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  TaskManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-TaskManagerFunction"
      PackageType: Image
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TaskManagerTable
      Environment:
        Variables:
          TABLE_NAME: !Ref TaskManagerTable
      Events:
        ApiEvents:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref TaskManagerApi

    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: latest

Outputs:
  ApiEndpoint:
    Description: "API endpoint URL for Prod stage"
    Value: !Sub "https://${TaskManagerApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  CloudFrontDistribution:
    Description: "CloudFront distribution URL"
    Value: !GetAtt TaskMangerCloudFrontDistribution.DomainName
  S3Endpoint:
    Description: "S3 bucket URL"
    Value: !GetAtt TaskMangerClientBucket.WebsiteURL
